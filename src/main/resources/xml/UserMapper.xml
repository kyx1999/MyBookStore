<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kyx1999.mybookstore.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.kyx1999.mybookstore.model.User">
        <id column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="pwd" property="pwd" jdbcType="VARCHAR"/>
        <result column="uname" property="uname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="CHAR"/>
        <result column="identity" property="identity" jdbcType="CHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, pwd, uname, sex, identity, email, phone, address
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where uid = #{uid,jdbcType=INTEGER}
    </select>
    <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where uname = #{uname,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where uid = #{uid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.kyx1999.mybookstore.model.User">
        insert into user (uid, pwd, uname,
            sex, identity, email, phone,
            address)
        values (#{uid,jdbcType=INTEGER}, #{pwd,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR},
            #{sex,jdbcType=CHAR}, #{identity,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
            #{address,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.kyx1999.mybookstore.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="pwd != null">
                pwd,
            </if>
            <if test="uname != null">
                uname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="identity != null">
                identity,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="pwd != null">
                #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.kyx1999.mybookstore.model.User">
        update user
        <set>
            <if test="pwd != null">
                pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="uname != null">
                uname = #{uname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="identity != null">
                identity = #{identity,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kyx1999.mybookstore.model.User">
        update user
        set pwd = #{pwd,jdbcType=VARCHAR},
            uname = #{uname,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=CHAR},
            identity = #{identity,jdbcType=CHAR},
            email = #{email,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            address = #{address,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=INTEGER}
    </update>
    <select id="isUserNameExist" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT
            COUNT(`uid`)
        FROM
            `User`
        WHERE
            `uname` = #{uname,jdbcType=VARCHAR}
        LIMIT 1
    </select>
</mapper>
